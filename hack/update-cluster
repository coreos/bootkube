#!/bin/sh
set -e

# Configuration
#
# Path to kubeconfig
KUBECONFIG=${KUBECONFIG:-cluster/auth/kubeconfig}
# Version of Kubernetes to upgrade to.
NEW_VERSION=${NEW_VERSION:-"v1.3.0-beta.2_coreos.0"}

# Shortcut for kubectl command
kc="kubectl --kubeconfig=${KUBECONFIG} --namespace=kube-system"
# Temp dir for manifests
temp=$(mktemp -d -t k8s-upgrade-$NEW_VERSION.XXX)
# New image to deploy.
new_image=${new_image:-"quay.io\/coreos\/hyperkube:${NEW_VERSION}"}

update_image() {
  local filepath=$1
  local newfile=$(echo $filepath | sed "s/\.yaml/-${NEW_VERSION}.yaml/")
  echo "newfile: " $newfile
  sed "s/image:.*hyperkube.*$/image: ${new_image}/g" "${filepath}" > "${newfile}"
}

# Update kube-apiserver
# Object is a DaemonSet, so we must first delete, then create to update.
echo
echo "Updating apiserver"
$kc get ds kube-apiserver -oyaml > "${temp}/kube-apiserver.yaml"
update_image "${temp}/kube-apiserver.yaml"
# Delete kube-apiserver and wait for temp-apiserver to take over.
$kc delete --timeout=1s -f "${temp}/kube-apiserver.yaml"
while true; do
        echo "checking for apiserver..."
        if $kc get pods 2>&1 >/dev/null; then
                echo "got apiserver"
                break
        fi
        echo "not found..."
        sleep 3
done
$kc create -f "${temp}/kube-apiserver-${NEW_VERSION}.yaml"

# Update controller-manager
echo
echo "Updating controller-manager"
$kc get deployment kube-controller-manager -oyaml > "${temp}/kube-controller-manager.yaml"
update_image "${temp}/kube-controller-manager.yaml"
$kc apply -f "${temp}/kube-controller-manager-${NEW_VERSION}.yaml"

# Update scheduler
echo
echo "Updating scheduler"
$kc get deployment kube-scheduler -oyaml > "${temp}/kube-scheduler.yaml"
update_image "${temp}/kube-scheduler.yaml"
$kc apply -f "${temp}/kube-scheduler-${NEW_VERSION}.yaml"

# Update kube-proxy
# Object is a DaemonSet, so we must first delete, then create to update.
echo
echo "Updating kube-proxy"
$kc get ds kube-proxy -oyaml > "${temp}/kube-proxy.yaml"
update_image "${temp}/kube-proxy.yaml"
$kc delete -f "${temp}/kube-proxy.yaml"
$kc create -f "${temp}/kube-proxy-$NEW_VERSION.yaml"

# Update kubelet
# Object is a DaemonSet, so we must first delete, then create to update.
echo
echo "Updating kubelet"
$kc get ds kubelet -oyaml > "${temp}/kubelet.yaml"
update_image "${temp}/kubelet.yaml"
$kc delete -f "${temp}/kubelet.yaml"
$kc create -f "${temp}/kubelet-$NEW_VERSION.yaml"

echo
echo "Update to ${NEW_VERSION} complete."
echo
echo "Examine status of pods with:"
echo "kubectl --kubeconfig=${KUBECONFIG} get pods"
echo
